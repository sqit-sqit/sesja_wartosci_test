import streamlit as st
from openai import OpenAI
from datetime import datetime
from pathlib import Path

def pokaz_podsumowanie(api_key, pricing, usd_to_pln):
    st.header("ğŸ“„ Podsumowanie Twojej sesji")

    user_values = st.session_state.get("user_values", [])
    top_10 = st.session_state.get("top_10", [])
    top_3 = st.session_state.get("top_3", [])
    coaching_messages = st.session_state.get("coaching_messages", [])
    podsumowanie_messages = st.session_state.get("podsumowanie_messages", [])

    # Oblicz koszt
    koszt_usd = 0.0
    for m in coaching_messages + podsumowanie_messages:
        if "usage" in m:
            koszt_usd += m["usage"]["prompt_tokens"] * pricing["input_tokens"]
            koszt_usd += m["usage"]["completion_tokens"] * pricing["output_tokens"]

    # StwÃ³rz podsumowanie z AI
    client = OpenAI(api_key=api_key)

    prompt = (
        f"UÅ¼ytkownik zdefiniowaÅ‚ nastÄ™pujÄ…ce wartoÅ›ci: {', '.join(top_3)}.\n"
        f"Na podstawie wczeÅ›niejszej rozmowy wygeneruj podsumowanie sesji coachingowej: \n"
        f"- Co byÅ‚o waÅ¼ne dla uÅ¼ytkownika\n"
        f"- Jakie wartoÅ›ci siÄ™ ujawniÅ‚y\n"
        f"- Jakie dziaÅ‚ania uÅ¼ytkownik moÅ¼e podjÄ…Ä‡ dalej\n"
        f"ZakoÅ„cz inspirujÄ…cym przesÅ‚aniem."
    )

    response = client.chat.completions.create(
        model="gpt-4o",
        messages=[
            {"role": "system", "content": "JesteÅ› doÅ›wiadczonym coachem piszÄ…cym podsumowanie sesji rozwojowej."},
            {"role": "user", "content": prompt}
        ]
    )

    summary = response.choices[0].message.content
    usage = response.usage
    podsumowanie_messages.append({"role": "assistant", "content": summary, "usage": usage})

    st.markdown("### ğŸ§¾ Podsumowanie wygenerowane przez AI")
    st.markdown(summary)

    # Zapisz wszystko do pliku
    lines = []
    lines.append("ğŸŸ¢ Wszystkie wartoÅ›ci wybrane przez uÅ¼ytkownika:\n" + ", ".join(user_values) + "\n")
    lines.append("ğŸ”Ÿ Wybrane 10 najwaÅ¼niejszych wartoÅ›ci:\n" + ", ".join(top_10) + "\n")
    lines.append("ğŸ”´ Wybrane 3 kluczowe wartoÅ›ci:\n" + ", ".join(top_3) + "\n")

    lines.append("\nğŸ“š Historia rozmÃ³w coachingowych:\n")
    for msg in coaching_messages:
        if "content" in msg:
            lines.append(f"{msg['role'].upper()}: {msg['content']}\n")

    lines.append("\nğŸ“„ Podsumowanie AI:\n" + summary + "\n")
    lines.append(f"ğŸ’° Koszt sesji: {koszt_usd:.4f} USD ({koszt_usd * usd_to_pln:.2f} PLN)\n")

    filename = f"podsumowanie_{datetime.now().strftime('%Y%m%d_%H%M%S')}.txt"
    filepath = Path("podsumowania") / filename
    filepath.parent.mkdir(exist_ok=True)

    with open(filepath, "w", encoding="utf-8") as f:
        f.write("\n".join(lines))

    st.success(f"âœ… Podsumowanie zapisane jako `{filename}` w folderze `podsumowania/`.")
